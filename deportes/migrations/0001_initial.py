# Generated by Django 4.2.25 on 2025-10-27 20:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('personas', '0003_alter_persona_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text="Ej: 'Infantil', 'Juvenil', 'Mayores'", max_length=100)),
                ('nivel', models.CharField(choices=[('INICIACION', 'Iniciación'), ('INTERMEDIO', 'Intermedio'), ('AVANZADO', 'Avanzado'), ('COMPETENCIA', 'Competencia'), ('LIBRE', 'Libre')], default='INICIACION', max_length=20)),
                ('edad_desde', models.PositiveIntegerField(blank=True, null=True)),
                ('edad_hasta', models.PositiveIntegerField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'deportes_categorias',
                'ordering': ['disciplina', 'orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo_actividad', models.CharField(choices=[('DEPORTE', 'Deporte'), ('NATACION', 'Natación'), ('GIMNASIO', 'Gimnasio'), ('COLONIA', 'Colonia'), ('CURSO', 'Curso'), ('EVENTO', 'Evento'), ('OTRO', 'Otro')], default='DEPORTE', max_length=20)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('requiere_apto_medico', models.BooleanField(default=False, help_text='Si requiere certificado médico')),
                ('edad_minima', models.PositiveIntegerField(blank=True, help_text='Edad mínima para inscribirse (opcional)', null=True)),
                ('edad_maxima', models.PositiveIntegerField(blank=True, help_text='Edad máxima para inscribirse (opcional)', null=True)),
                ('es_temporada', models.BooleanField(default=False, help_text='Si la actividad es por temporada (ej: colonias)')),
                ('fecha_inicio_temporada', models.DateField(blank=True, null=True)),
                ('fecha_fin_temporada', models.DateField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de visualización')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
                'db_table': 'deportes_disciplinas',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Frecuencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text="Ej: 'LU MI VI', 'MA JU', 'PASE LIBRE'", max_length=50, unique=True)),
                ('lunes', models.BooleanField(default=False)),
                ('martes', models.BooleanField(default=False)),
                ('miercoles', models.BooleanField(default=False)),
                ('jueves', models.BooleanField(default=False)),
                ('viernes', models.BooleanField(default=False)),
                ('sabado', models.BooleanField(default=False)),
                ('domingo', models.BooleanField(default=False)),
                ('activa', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Frecuencia',
                'verbose_name_plural': 'Frecuencias',
                'db_table': 'deportes_frecuencias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='GrupoHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo del grupo', max_length=150)),
                ('horario_inicio', models.TimeField(blank=True, null=True)),
                ('horario_fin', models.TimeField(blank=True, null=True)),
                ('cupo_maximo', models.PositiveIntegerField(blank=True, help_text='Cantidad máxima de inscriptos (opcional)', null=True)),
                ('arancel_socio', models.DecimalField(decimal_places=2, help_text='Precio mensual para socios', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('arancel_no_socio', models.DecimalField(decimal_places=2, help_text='Precio mensual para no socios', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('activo', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupos', to='deportes.categoria')),
                ('frecuencia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='deportes.frecuencia')),
                ('instructor', models.ForeignKey(blank=True, help_text='Profesor a cargo del grupo', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grupos_asignados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grupo/Horario',
                'verbose_name_plural': 'Grupos/Horarios',
                'db_table': 'deportes_grupos_horarios',
                'ordering': ['categoria', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente de Aprobación'), ('ACTIVA', 'Activa'), ('SUSPENDIDA', 'Suspendida'), ('BAJA', 'Baja')], default='PENDIENTE', max_length=20)),
                ('fecha_inscripcion', models.DateField(default=django.utils.timezone.now)),
                ('fecha_inicio', models.DateField(help_text='Fecha desde la cual empieza a pagar')),
                ('fecha_baja', models.DateField(blank=True, help_text='Fecha de baja de la actividad', null=True)),
                ('beca_aprobada', models.BooleanField(default=False, help_text='Si la beca fue aprobada por Secretaría')),
                ('beca_aprobada_fecha', models.DateTimeField(blank=True, null=True)),
                ('porcentaje_descuento_adicional', models.DecimalField(decimal_places=2, default=0, help_text='Descuento adicional manual (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('apto_medico_presentado', models.BooleanField(default=False, help_text='Si presentó el apto médico')),
                ('apto_medico_vencimiento', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('observaciones_internas', models.TextField(blank=True, help_text='Observaciones solo visibles para administradores', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'db_table': 'deportes_inscripciones',
                'ordering': ['-fecha_inscripcion'],
            },
        ),
        migrations.CreateModel(
            name='Lugar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=200, null=True)),
                ('capacidad_maxima', models.PositiveIntegerField(blank=True, help_text='Capacidad máxima del lugar (opcional)', null=True)),
                ('activo', models.BooleanField(default=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lugar',
                'verbose_name_plural': 'Lugares',
                'db_table': 'deportes_lugares',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoBeca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único para identificar la beca', max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('porcentaje_descuento', models.DecimalField(decimal_places=2, help_text='Porcentaje de descuento (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('requiere_autorizacion', models.BooleanField(default=True, help_text='Si requiere aprobación de Secretaría de Deportes')),
                ('requiere_documentacion', models.BooleanField(default=False, help_text='Si requiere presentar documentación')),
                ('documentacion_requerida', models.TextField(blank=True, help_text='Descripción de la documentación necesaria', null=True)),
                ('activa', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Beca',
                'verbose_name_plural': 'Tipos de Beca',
                'db_table': 'deportes_tipos_beca',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='InscripcionHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(choices=[('ALTA', 'Alta'), ('MODIFICACION', 'Modificación'), ('BAJA', 'Baja'), ('SUSPENSION', 'Suspensión'), ('REACTIVACION', 'Reactivación'), ('BECA_SOLICITADA', 'Beca Solicitada'), ('BECA_APROBADA', 'Beca Aprobada'), ('BECA_RECHAZADA', 'Beca Rechazada')], max_length=20)),
                ('descripcion', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('inscripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='deportes.inscripcion')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Inscripción',
                'verbose_name_plural': 'Historial de Inscripciones',
                'db_table': 'deportes_inscripciones_historial',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='inscripcion',
            name='beca',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inscripciones', to='deportes.tipobeca'),
        ),
        migrations.AddField(
            model_name='inscripcion',
            name='beca_aprobada_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='becas_aprobadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inscripcion',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inscripciones_creadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inscripcion',
            name='grupo_horario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='deportes.grupohorario'),
        ),
        migrations.AddField(
            model_name='inscripcion',
            name='persona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones_deportivas', to='personas.persona'),
        ),
        migrations.AddField(
            model_name='grupohorario',
            name='lugar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='deportes.lugar'),
        ),
        migrations.AddField(
            model_name='categoria',
            name='disciplina',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorias', to='deportes.disciplina'),
        ),
        migrations.CreateModel(
            name='PagoActividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('anio', models.PositiveIntegerField()),
                ('monto_base', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('monto_descuento', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('monto_final', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PAGADO', 'Pagado'), ('VENCIDO', 'Vencido'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('fecha_vencimiento', models.DateField()),
                ('fecha_pago', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inscripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='deportes.inscripcion')),
            ],
            options={
                'verbose_name': 'Pago de Actividad',
                'verbose_name_plural': 'Pagos de Actividades',
                'db_table': 'deportes_pagos',
                'ordering': ['-anio', '-mes'],
                'indexes': [models.Index(fields=['estado', 'fecha_vencimiento'], name='deportes_pa_estado_6e0fb5_idx'), models.Index(fields=['inscripcion', 'estado'], name='deportes_pa_inscrip_3813de_idx')],
                'unique_together': {('inscripcion', 'mes', 'anio')},
            },
        ),
        migrations.AddIndex(
            model_name='inscripcion',
            index=models.Index(fields=['persona', 'estado'], name='deportes_in_persona_ce99ec_idx'),
        ),
        migrations.AddIndex(
            model_name='inscripcion',
            index=models.Index(fields=['grupo_horario', 'estado'], name='deportes_in_grupo_h_bd7664_idx'),
        ),
        migrations.AddIndex(
            model_name='inscripcion',
            index=models.Index(fields=['fecha_inscripcion'], name='deportes_in_fecha_i_83ab70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='categoria',
            unique_together={('disciplina', 'nombre')},
        ),
    ]
